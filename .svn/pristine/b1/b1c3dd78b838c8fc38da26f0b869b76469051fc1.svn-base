<p-toast></p-toast>
<app-spinner [msg]="spinnerMsg"></app-spinner>
<p-confirmDialog [style]="{width: '50vw'}" [baseZIndex]="10000" rejectButtonStyleClass="p-button-text">
</p-confirmDialog>
<app-dashboard-sidemenu></app-dashboard-sidemenu>

<!-- ********************** Main Content ******************** -->

<div class="main-content d-flex flex-column">

    <!-- <app-dashboard-navbar></app-dashboard-navbar> -->
    <app-navbar-style-one></app-navbar-style-one>

    <!-- ********************** Breadcrumb Area  ******************** -->

    <div class="breadcrumb-area" *ngFor="let Content of breadcrumb;">
        <h1>{{Content.title}}</h1>
        <ol class="breadcrumb">
            <li class="item"><a routerLink="/">Home</a></li>
            <li class="item"><a routerLink="dashboard">{{Content.subTitle}}</a></li>
            <li class="item">{{Content.title}}</li>
        </ol>
    </div>

    <!-- ********************** End Breadcrumb Area  ******************** -->

    <!-- ********************** Add Master Form Area  ******************** -->

    <div class="add-listings-box">
        <!-- <h3>Add Master Name</h3> -->
        <form [formGroup]="postFeesForm" (ngSubmit)="onSubmit()" #feesForm="ngForm">
            <div class="row mt-1">
                <div class="col-lg-2 col-md-2 col-sm-12">
                    <div class="form-group">Fees Name<span style="color: red;">*</span>:
                        <input type="text" class="form-control" placeholder="Fee Name" formControlName="fee_name"
                            required
                            [class.is-invalid]="(feesForm.submitted && postFeesForm.get('fee_name')?.invalid) || postFeesForm.get('fee_name')?.invalid && postFeesForm.get('fee_name').touched">
                        <div class="invalid-feedback">Name is required</div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12">
                    <div class="form-group">Fee Category<span style="color: red;">*</span>:
                        <input type="text" class="form-control" placeholder="Fee Category"
                            formControlName="fee_category" required
                            [class.is-invalid]="(feesForm.submitted && postFeesForm.get('fee_category')?.invalid) || postFeesForm.get('fee_category')?.invalid && postFeesForm.get('fee_category').touched">
                        <div class="invalid-feedback">Fee Category is required</div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12">
                    <div class="form-group">Member Amount<span style="color: red;">*</span>:
                        <input type="number" class="form-control" placeholder="Member Amount"
                            formControlName="member_amount" required
                            [class.is-invalid]="(feesForm.submitted && postFeesForm.get('member_amount')?.invalid) || postFeesForm.get('member_amount')?.invalid && postFeesForm.get('member_amount').touched">
                        <div class="invalid-feedback">Member Amount is required</div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12">
                    <div class="form-group">Non Member Amount<span style="color: red;">*</span>:
                        <input type="number" class="form-control" placeholder="Non Member Amount"
                            formControlName="non_member_amount" required
                            [class.is-invalid]="(feesForm.submitted && postFeesForm.get('non_member_amount')?.invalid) || postFeesForm.get('non_member_amount')?.invalid && postFeesForm.get('non_member_amount').touched">
                        <div class="invalid-feedback">Non Member Amount is required</div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12">
                    <div class="form-group">Tax<span style="color: red;">*</span>:
                        <input type="number" class="form-control" placeholder="Tax" formControlName="taxes" required
                            [class.is-invalid]="(feesForm.submitted && postFeesForm.get('taxes')?.invalid) || postFeesForm.get('taxes')?.invalid && postFeesForm.get('taxes').touched">
                        <div class="invalid-feedback">Tax is required</div>
                    </div>
                </div>
                <div class="col-lg-2 col-md-2 col-sm-12" style="text-align: right;">
                    <div class="add-listings-btn">
                        <!-- [disabled]="!postMemberCategoriesForm.valid" -->
                        <button type="submit">Add</button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <!-- ********************** End Add Master Form Area  ******************** -->

    <!-- ********************** Master View Area  ******************** -->

    <div class="Master-view-box">
        <div class="theader">
            <!-- <ng-template pTemplate="caption"> -->
            <div class="flex">
                <span class="p-input-icon-left ml-auto">
                    <i class="pi pi-search"></i>
                    <input pInputText type="text" (input)="dt1.filterGlobal($event.target.value, 'contains')"
                        placeholder="Search keyword" [(ngModel)]="filterVal" />
                </span>
                <p-button type="button" class="ml-2" (click)="reset(dt1)" icon="bx bx-reset"></p-button>
            </div>
        </div>
        <!-- </ng-template> -->
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <p-table #dt1 [value]="feesData" dataKey="id" [rows]="10" [showCurrentPageReport]="true"
                    styleClass="p-datatable-sm p-datatable-customers" [rowsPerPageOptions]="[10,25,50]"
                    [loading]="loading" [paginator]="true" editMode="row" responsiveLayout="scroll"
                    currentPageReportTemplate="Showing {first} to {last} of {totalRecords} entries"
                    [globalFilterFields]="['fee_name', 'fee_category', 'member_amount', 'non_member_amount', 'taxes']">

                    <ng-template pTemplate="header" style="min-height: 500px;">
                        <tr>
                            <th style="max-width: 50px; text-align: center;">S. No.</th>
                            <th style="min-width: 130px;">Fees Name</th>
                            <th style="min-width: 50px;">Fees Categories</th>
                            <th style="min-width: 50px;">Member Fees</th>
                            <th style="min-width: 50px;">Non Member Fees</th>
                            <th style="min-width: 50px;">Tax</th>
                            <th style="min-width: 70px;"></th>
                        </tr>
                    </ng-template>

                    <ng-template pTemplate="body" let-fee let-i="rowIndex" let-editing="editing">
                        <tr [pEditableRow]="fee">
                            <td style="text-align: center;">
                                {{i+1}}
                            </td>
                            <td>
                                <p-cellEditor editingRowKeys="fee.id">
                                    <ng-template pTemplate="input">
                                        <input pInputText type="text" [(ngModel)]=" fee.fee_name" required>
                                    </ng-template>
                                    <ng-template pTemplate="output">
                                        {{fee.fee_name}}
                                    </ng-template>
                                </p-cellEditor>
                            </td>
                            <td>
                                <p-cellEditor editingRowKeys="fee.id">
                                    <ng-template pTemplate="input">
                                        <input pInputText type="text" [(ngModel)]=" fee.fee_category" required>
                                    </ng-template>
                                    <ng-template pTemplate="output">
                                        {{fee.fee_category}}
                                    </ng-template>
                                </p-cellEditor>
                            </td>
                            <td>
                                <p-cellEditor editingRowKeys="fee.id">
                                    <ng-template pTemplate="input">
                                        <input pInputText type="text" [(ngModel)]=" fee.member_amount" required>
                                    </ng-template>
                                    <ng-template pTemplate="output">
                                        {{fee.member_amount}}
                                    </ng-template>
                                </p-cellEditor>
                            </td>
                            <td>
                                <p-cellEditor editingRowKeys="fee.id">
                                    <ng-template pTemplate="input">
                                        <input pInputText type="text" [(ngModel)]=" fee.non_member_amount" required>
                                    </ng-template>
                                    <ng-template pTemplate="output">
                                        {{fee.non_member_amount}}
                                    </ng-template>
                                </p-cellEditor>
                            </td>
                            <td>
                                <p-cellEditor editingRowKeys="fee.id">
                                    <ng-template pTemplate="input">
                                        <input pInputText type="text" [(ngModel)]=" fee.taxes" required>
                                    </ng-template>
                                    <ng-template pTemplate="output">
                                        {{fee.taxes}}
                                    </ng-template>
                                </p-cellEditor>
                            </td>
                            <td style="text-align: right;">
                                <button *ngIf="!editing" pButton pRipple pInitEditableRow icon="bx bx-pencil"
                                    class="p-button-rounded p-button-text p-button-success mr-2"
                                    (click)="editMemberCategoryMaster(fee)"></button>

                                <button *ngIf="!editing" pButton pRipple icon="bx bx-trash"
                                    class="p-button-rounded p-button-text p-button-warning"
                                    (click)="deleteMaster(fee)"></button>
                                <button *ngIf="editing" pButton pRipple type="button" pSaveEditableRow
                                    icon="pi pi-check" (click)="onRowEditSave(fee)"
                                    class="p-button-rounded p-button-success p-button-text mr-2"></button>
                                <button *ngIf="editing" pButton pRipple type="button" pCancelEditableRow
                                    icon="pi pi-times" (click)="onRowEditCancel(fee, i)"
                                    class="p-button-rounded p-button-danger p-button-text"></button>
                            </td>
                        </tr>
                    </ng-template>
                    <ng-template pTemplate="emptymessage">
                        <tr>
                            <td colspan="5">No Data Found.</td>
                        </tr>
                    </ng-template>
                </p-table>
            </div>
        </div>
    </div>

    <!-- ********************** End Master View Area  ******************** -->

    <div class="flex-grow-1"></div>

    <!-- ********************** Copyrights Area  ******************** -->

    <app-copyrights></app-copyrights>

    <!-- ********************** End Copyrights Area  ******************** -->

</div>